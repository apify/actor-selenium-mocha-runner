{
  "title": "Run mocha code generated by Selenium IDE.",
  "type": "object",
  "schemaVersion": 1,
  "properties": {
    "seleniumMochaCode": {
      "title": "Selenium mocha code",
      "type": "string",
      "description": "The mocha code generated by Selenium IDE.",
      "editor": "javascript",
      "prefill": "// Generated by Selenium IDE\nconst { Builder, By, Key, until } = require('selenium-webdriver')\nconst assert = require('assert')\n\ndescribe('Test cralwee', function() {\n  this.timeout(30000)\n  let driver\n  let vars\n  beforeEach(async function() {\n    driver = await new Builder().forBrowser('firefox').build()\n    vars = {}\n  })\n  afterEach(async function() {\n    await driver.quit();\n  })\n  async function waitForWindow(timeout = 2) {\n    await driver.sleep(timeout)\n    const handlesThen = vars[\"windowHandles\"]\n    const handlesNow = await driver.getAllWindowHandles()\n    if (handlesNow.length > handlesThen.length) {\n      return handlesNow.find(handle => (!handlesThen.includes(handle)))\n    }\n    throw new Error(\"New window did not appear before timeout\")\n  }\n  it('Test cralwee', async function() {\n    await driver.get(\"https://crawlee.dev/\")\n    await driver.manage().window().setRect({ width: 685, height: 921 })\n    await driver.findElement(By.css(\".navbar__toggle > svg\")).click()\n    await driver.findElement(By.linkText(\"API\")).click()\n    {\n      const element = await driver.findElement(By.linkText(\"API\"))\n      await driver.actions({ bridge: true }).moveToElement(element).perform()\n    }\n    {\n      const element = await driver.findElement(By.css(\".tocCollapsibleButton_TO0P\"))\n      await driver.actions({ bridge: true }).moveToElement(element).perform()\n    }\n    {\n      const element = await driver.findElement(By.CSS_SELECTOR, \"body\")\n      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()\n    }\n    vars[\"windowHandles\"] = await driver.getAllWindowHandles()\n    await driver.findElement(By.css(\"li:nth-child(3) > a > code\")).click()\n    vars[\"win3907\"] = await waitForWindow(2000)\n    vars[\"root\"] = await driver.getWindowHandle()\n    await driver.switchTo().window(vars[\"win3907\"])\n    await driver.close()\n    await driver.switchTo().window(vars[\"root\"])\n  })\n})"
    }
  },
  "required": ["seleniumMochaCode"]
}
